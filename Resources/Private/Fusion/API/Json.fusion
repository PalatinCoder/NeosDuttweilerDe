prototype(GSL.DuttweilerDe:Api.Json) < prototype(Neos.Fusion:Http.Message) {
  httpResponseHead {
    headers.Content-Type = 'application/json;charset=utf-8'
  }
  
  content = Neos.Fusion:Case {
    news {
      condition = ${request.arguments.endpoint == 'news'}
      type = 'GSL.DuttweilerDe:Api.Json.News'
    }
    events {
      condition = ${request.arguments.endpoint == 'events'}
      type = 'GSL.DuttweilerDe:Api.Json.Events'
    }
  }
}

prototype(GSL.DuttweilerDe:Api.Json.Object) < prototype(Neos.Fusion:Component) {
  @process.1 = ${Json.stringify(value)}
}

prototype(GSL.DuttweilerDe:Api.Json.News) < prototype(GSL.DuttweilerDe:Api.Json.Object) {
  @context.chronikNode = ${q(site).find('#529a59e2-1849-2782-471c-7635f47167de').get()}
  @context.standaloneItems = ${q(site).find('/sites/duttweilerde').children('standalonenews').children().get()}
  renderer = Neos.Fusion:RawCollection {
    collection = ${q(chronikNode).children('[instanceof GSL.DuttweilerDe.Pages:ChronikBranch]').first().children('[instanceof GSL.DuttweilerDe.Pages:ChronikItem]').slice(0,10).orderByDate().get()}
    itemName = 'item'
    itemRenderer = Neos.Fusion:RawArray {
      uid = ${q(item).property('_name')}
      headline = ${q(item).property('title')}
      subheadline = ${q(item).property('subheadline')}
      date = ${Date.format(q(item).property('date'), 'd.m.Y')}
      text = ${String.stripTags(q(item).children('[instanceof Neos.Neos:ContentCollection]').first().children().first().property('text'))}
      image = Neos.Neos:ImageUri {
        asset = ${q(item).children('[instanceof Neos.Neos:ContentCollection]').first().children().first().property('image')}
        @if.1 = ${q(item).children('[instanceof Neos.Neos:ContentCollection]').first().children().first().property('image')}
      }
      imageAlternativeText = Neos.Fusion:Value {
        value = ${q(item).children('[instanceof Neos.Neos:ContentCollection]').first().children().first().property('alternativeText')}
        @if.1 = ${q(item).children('[instanceof Neos.Neos:ContentCollection]').first().children().first().property('image')}
      }
      url = Neos.Neos:NodeUri {
        absolute = ${false}
        format = 'html'
        node = ${q(item).get(0)}
      }
    }
  }
  
  @cache {
    mode = 'cached'
    entryTags {
      1 = ${'NodeType_GSL.DuttweilerDe.Pages:ChronikItem'}
      2 = ${'DescendantOf_' + chronikNode.identifier}
      3 = ${'NodeType_GSL.DuttweilerDe.Content:FrontpageNewsItemStandalone'}
    }
  }
}

prototype(GSL.DuttweilerDe:Api.Json.Events) < prototype(GSL.DuttweilerDe:Api.Json.Object) {
  @context.eventsNode = ${q(site).find('#1801884b-729f-73f0-8d42-312949da02c7').get()}
  renderer = Neos.Fusion:RawCollection {
    collection = ${q(eventsNode).children().children('[instanceof GSL.DuttweilerDe.Content:Event]').get()}
    itemName = 'event'
    itemRenderer = Neos.Fusion:RawArray {
      title = ${q(event).property('title')}
      host = ${'' + q(event).property('host')}
      location = ${''+ q(event).property('location')}
      promote = ${q(event).property('promote')}
      link = Neos.Neos:NodeUri {
        node = ${q(event).property('link')}
        format = 'html'
        absolute = ${false}
        @if.1 = ${q(event).property('link')}
      }
      startDate = ${Date.format(q(event).property('startDate'), 'd.m.Y H:i')}
      endDate = ${Date.format(q(event).property('endDate'), 'd.m.Y H:i')}
    }
  }
  
  @cache {
    mode = 'cached'
    entryTags {
      1 = ${'NodeType_GSL.DuttweilerDe.Content:Event'}
    }
  }
}
