/**
 * Root TypoScript template for the Duttweiler site
 */

include: NodeTypes/*
include: PageTypes/*
include: API/*


prototype(Neos.NodeTypes:Image) {
	partialRootPath = 'resource://GSL.DuttweilerDe/Private/Templates/NodeTypes/Partials'
	maximumWidth = ${q(node).property('displayWidth')}
	maximumHeight = ${q(node).property('displayHeight')}
}
prototype(Neos.NodeTypes:TextWithImage).partialRootPath = 'resource://GSL.DuttweilerDe/Private/Templates/NodeTypes/Partials'
prototype(Neos.NodeTypes:Headline).attributes.class = Neos.Fusion:Case {
    boxed {
        condition = ${q(node).property('layout') == 'boxed'}
        renderer = ${'boxed'}
    }
    default {
        condition = ${true}
        renderer = ${'underline'}
    }
}

# custom error pages (https://github.com/neos/neos-development-collection/pull/2374)
error {
    @context.notfoundDocument = ${q(site).children('[uriPathSegment="error"]').children('[uriPathSegment="notfound"]').get(0)}

    4xx {
        @position = 'start'
        condition = ${statusCode >= 400 && statusCode < 500 && notfoundDocument}
        renderer = Neos.Fusion:Renderer {
            @context {
                site = ${notfoundDocument.context.currentSideNode}
                documentNode = ${notfoundDocument}
                node = ${notfoundDocument}
            }
            renderPath = '/default'
        }
    }
}

# API
root.format.@position = 'end 9995'
# API endpoint parameter
prototype(Neos.Fusion:GlobalCacheIdentifiers) {
	endpoint = ${request.arguments.endpoint}
}

json = GSL.DuttweilerDe:Api.Json
atom = GSL.DuttweilerDe:Api.Atom.News
